/*
 * Copyright (c) 2021 @MangoIV
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// makes it possible to hold backspace

&lt { quick_tap_ms = <140>; };

/ {
    combos {
        compatible = "zmk,combos";

        less {
            bindings = <&kp LT>;
            key-positions = <27 26>;
        };

        more {
            bindings = <&kp GT>;
            key-positions = <28 27>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <6 7>;
            layers = <0>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
            layers = <0>;
        };

        lp {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        rp {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <17 18>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <29 28>;
        };

        lbs {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <6 7>;
            layers = <2>;
        };

        rbs {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 8>;
            layers = <2>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            label = "Qwerty";
            bindings = <
&kp Q             &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U        &kp I  &kp O      &kp P
&lt 1 A           &kp S  &kp D     &kp F  &kp G        &kp H      &kp J        &kp K  &kp L      &kp RET
&mt LEFT_SHIFT Z  &kp X  &kp C     &kp V  &kp LSHFT    &kp B      &kp N        &kp M  &kp DOT    &kp SEMI
                         &kp LGUI         &lt 2 SPACE  &kp LG(R)  &lt 3 SPACE         &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        layer_1 {
            bindings = <
&kp TILDE    &kp RC(Q)     &kp RC(W)      &kp RC(E)  &kp RC(R)  &kp RC(T)      &kp LEFT_BRACKET  &kp UP_ARROW  &kp RIGHT_BRACKET  &kp BACKSPACE
&bootloader  &kp RC(A)     &kp RC(S)      &kp RC(D)  &kp RC(F)  &kp BACKSLASH  &kp LEFT          &kp DOWN      &kp RIGHT          &kp SQT
&trans       &kp LA(LEFT)  &kp LA(RIGHT)  &kp RC(C)  &kp RC(V)  &kp UNDER      &kp DLLR          &kp AMPS      &kp COMMA          &kp SLASH
                           &kp LEFT_ALT              &kp LCTRL  &trans         &kp RIGHT_SHIFT                 &kp CAPS
            >;
        };

        layer_2 {
            bindings = <
&kp TAB        &kp F1  &kp F2             &kp F3   &kp F4   &kp N7    &kp N8  &kp N9  &kp EQUAL  &kp BSPC
&kp ESCAPE     &kp F5  &kp F6             &kp F7   &kp F8   &kp N4    &kp N5  &kp N6  &kp MINUS  &kp DELETE
&kp LS(LG(Z))  &kp F9  &kp F10            &kp F11  &kp F12  &kp N1    &kp N2  &kp N3  &kp DOT    &kp COLON
                       &kp LS(LA(LG(V)))           &trans   &kp HOME  &kp N0          &kp X
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        layer_3 {
            bindings = <
&kp GRAVE    &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT    &bt BT_DISC 0  &kp AMPS    &kp STAR   &kp LPAR   &kp PLUS   &kp RPAR
&kp LA(TAB)  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOL_UP  &bt BT_DISC 1  &kp DLLR    &kp PRCNT  &kp CARET  &kp UNDER  &kp DQT
&bt BT_CLR   &bt BT_SEL 0       &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_DISC 2  &kp EXCL    &kp AT     &kp HASH   &kp PIPE   &kp QMARK
                                &trans                          &mo 4          &kp C_MUTE  &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp LC(LA(LG(Y)))  &kp LA(LC(LG(U)))  &kp LA(LC(LG(I)))      &kp LA(LG(LC(O)))    &trans
&trans  &trans  &trans  &trans  &trans  &kp LA(LC(LG(H)))  &kp LA(LC(LG(J)))  &kp LA(LC(LG(K)))      &kp LA(LC(LG(L)))    &kp LA(LC(LG(ENTER)))
&trans  &trans  &trans  &trans  &trans  &kp LA(LC(LG(N)))  &kp LC(LA(LG(M)))  &kp LA(LC(LG(COMMA)))  &kp LA(LC(LG(DOT)))  &trans
                &trans          &trans  &soft_off          &trans                                    &mo 5
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans
                &trans          &trans  &bootloader  &trans          &trans
            >;
        };
    };
};
